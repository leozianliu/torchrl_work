# Config file for multirun_v1 and multisim_zoo

train_parameters:
  frames_per_batch: 5000
  n_iters: 50
  num_envs: 10
  #total_frames = frames_per_batch * n_iters

  # Training
  num_epochs: 20
  minibatch_size: 500
  lr: !!float 3e-4
  max_steps: 500

  # Structure
  policy_share_params: True
  centralized_critic: True # Use centralized critic for each type of agent (MAPPO)

  # PPO
  clip_epsilon: 0.2
  gamma: 0.99
  lmbda: 0.9
  entropy_eps: !!float 5e-4

  # Seeding
  rng_seed: 20 # Base seed for creating the environment, reset() will continue drawing from the same RNG sequence across episodes
  eval_seed: 10 # Seed for evaluation runs, to ensure reproducibility

general_inputs:
  map_size: [500, 300]
  num_obstacles: 200
  obstacles_size_range: [6, 12] # Range of obstacle sizes
  max_neighbors: 0 # Maximum number of neighbors each robot could observe
  view_range_ugv: 5
  view_range_uav: 30

robots: # Either [type] or [type, pos, goal] or [type, pos, goal, bat, comm]
  - type: 'UAV'
  - type: 'UAV'
  - type: 'UAV'
  - type: 'UAV'
  - type: 'UGV'
  - type: 'UGV'
  - type: 'UGV'
  - type: 'UGV'


  # - #id: 0
  #   type: 'UAV'
  #   initial_position: [10, 10] # (x, y)
  #   goal: [90, 90] # (x, y)
  #   battery_limit: 100.0
  #   communication_range: 20.0
  # - #id: 1
  #   type: 'UGV'
  #   initial_position: [20, 20]
  #   goal: [80, 80]
  #   battery_limit: 100.0
  #   communication_range: 20.0
  # - #id: 2
  #   type: 'UAV'
  #   initial_position: [30, 30]
  #   goal: [70, 70]
  # - #id: 3
  #   type: 'UGV'
  # - #id: 4
  #   type: 'UGV'
  # - #id: 5
  #   type: 'UAV'
  # - #id: 6
  #   type: 'UGV'
  # - #id: 7
  #   type: 'UGV'
  # - #id: 8
  #   type: 'UGV'
  # - #id: 9
  #   type: 'UGV'